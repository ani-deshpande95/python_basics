# ------------------------------------------------------------------------------------------------------------------------------------------------------- #
pets = 'Cats & Dogs & Mouse & Horse & Chicken & Mouse'
#print(pets.index('s'))              #Index method will print the index of char in string (only first occurence)
#print(pets.index("O"))              #Will return error if char not found in string as this is capital O
#print(pets.index("o"))              
#print(pets.index("Mouse"))          


# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

#print("Dragon" in pets)            # in keyword can be used with string, it will return boolean value


# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

def replace_domains(emails, old_domain, new_domain):
    if old_domain in emails :
        index = emails.index("@" + old_domain)
        emails = emails[:index+1] + new_domain
    return emails


new_email = replace_domains("ani.deshpande95@gmail.com", "gmail.com", "yahoo.com")
# print(new_email)            #Will return ani.deshpande95@yahoo.com

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

test = "        spaces       "

test.strip()            #Removes spaces     
test.lstrip()           #removes left space
test.rstrip()           #removes right spaces

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

test = "test"
test.join("join")   # Will output "testjoin" 

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

test_1 = "This is another string"
# print(test_1.split())           #Will output ['This', 'is', 'another', 'string']


# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

# print(test_1.count('i'))        # Will output total number of count of 'i' in string test_1 output: 3

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

# print("AabbbCCccDFD".lower())       # will print aabbbccccdfd
# print("AabbbCCccDFD".upper())        # will print AABBBCCCCDFD

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

# print("1234".isnumeric())           # Will print true
# print("-123.45".isnumeric())        # Will print false

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

# print("abcdef".isalpha())           # Will print true


# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

# print("This is string actions".split())         # Will print ['This', 'is', 'string', 'actions']

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

# print("gd://test-bucket-name/test-folder".split('/'))       # ['gd:', '', 'test-bucket-name', 'test-folder']

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #

print("Test test".replace('test', 'methods'))           # will print "Test methods"

# ------------------------------------------------------------------------------------------------------------------------------------------------------- #



# ------------------------------------------------------------------------------------------------------------------------------------------------------- #



# ------------------------------------------------------------------------------------------------------------------------------------------------------- #



# ------------------------------------------------------------------------------------------------------------------------------------------------------- #